{
  "title": "Clean Fast Install in Docker",
  "story": [
    {
      "type": "paragraph",
      "id": "f4e9e8849afae592",
      "text": "Can we write a \"clean, fast install\" that would bring up a new server from an existing one? Maybe it uses a Transporter: Create an account on Digital Ocean and drag that page to the install transporter. Repeat the same process for an upgrade. There are tons of cross-site issues here for sure. But what is the most wiki thing we could do assuming one had a whole wiki site to explain it and do it with tractable automation?\" [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1511799189119945TiWbn:matrix.org matrix]"
    },
    {
      "type": "paragraph",
      "id": "a25540c18efa1d8a",
      "text": "[[What does FedWiki know about Docker?]]"
    },
    {
      "type": "paragraph",
      "id": "5ec2b7ad02e0e8a0",
      "text": "I gradually refactor the configurations in my public wiki and in the local-farm code.  I nudge them in the direction of almost identical configs with the aim of maximizing what is shared between them and minimizing them to only their essential differences."
    },
    {
      "type": "markdown",
      "id": "072e6f66c6d0b858",
      "text": "I expect those differences to be mainly:\n* domain names\n* real TLS certs vs self-signed TLS certs\n* content of pages\n"
    },
    {
      "type": "pagefold",
      "id": "ea5ca8270e9138f8",
      "text": "not clean nor fast yet"
    },
    {
      "type": "markdown",
      "id": "9a0e34d275a0c787",
      "text": "# Create a Docker Host in Digital Ocean"
    },
    {
      "type": "paragraph",
      "id": "78c3a7f934a0d124",
      "text": "I think you can use my [[digitalocean-bootstrap.sh]] script to create your own docker host in Digital Ocean."
    },
    {
      "type": "markdown",
      "id": "7a81877d8c1869f1",
      "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. tell your domain registrar to use Digital Ocean's DNS servers.\n4. run `./digitalocean-bootstrap.sh`\n\n"
    },
    {
      "type": "markdown",
      "id": "3ba6738fb744b96d",
      "text": "# Start your Wiki (probably not working yet)"
    },
    {
      "type": "markdown",
      "id": "52e8bb33606fb173",
      "text": "TODO (for the author): simplify the docker-compose thing so this works:\n1. setup `LE_EMAIL`\n2. setup domain names in Digital Ocean\n2. clone repo\n3. start with Let's Encrypt's sandbox first\n4. `docker-compose up -d`\n5. change to real certs from Let's Encrypt\n6. `docker-compose restart proxy`"
    },
    {
      "type": "pagefold",
      "id": "002cbd0ae047c856",
      "text": "."
    },
    {
      "type": "markdown",
      "id": "b161bc1826cb3e89",
      "text": "Updating my running wiki was clean and fast.  Today Paul announced an update to wiki and a security update for nodejs.  I took a couple small steps to update my public wiki.\n"
    },
    {
      "type": "markdown",
      "id": "f062cd1841f77898",
      "text": "First, I updated the `dobbs/farm` container.  I jumped up to `nodejs 8` and `wiki 0.13.0`.  I committed, tagged and pushed that change to github. [https://github.com/dobbs/farm/commit/e37d746c69ee00410363204d0fcffa03ae93d244 github]\n"
    },
    {
      "type": "markdown",
      "id": "fd7fa912aae36414",
      "text": "Because I have them connected to each other, dockerhub noticed the new code and built new containers for them.  [https://hub.docker.com/r/dobbs/farm/builds/bedhktshtngoqqyscmm7ytb/ dockerhub]\n"
    },
    {
      "type": "markdown",
      "id": "3de89495b5cfc542",
      "text": "Second, I updated the version noted in `docker-compose.yml` for my public site, and then ...\n"
    },
    {
      "type": "code",
      "id": "311fea0084101b56",
      "text": "# set shell env to control my public docker host\neval $(docker-machine env wiki.dbbs.co)\n\n# recreated the farm container\ndocker-compose up -d farm"
    },
    {
      "type": "markdown",
      "id": "34da6f218fe24660",
      "text": "Contrast [[Clean Fast Install Locally]]"
    }
  ],
  "journal": [
    {
      "type": "create",
      "item": {
        "title": "Clean Fast Install in Docker",
        "story": []
      },
      "date": 1512826561391
    },
    {
      "type": "add",
      "item": {
        "type": "paragraph",
        "id": "f4e9e8849afae592",
        "text": "Ward asked: \"can we write a \"clean, fast install\" that would bring up a new server from an existing one? Maybe it uses a Transporter: Create an account on Digital Ocean and drag that page to the install transporter. Repeat the same process for an upgrade. There are tons of cross-site issues here for sure. But what is the most wiki thing we could do assuming one had a whole wiki site to explain it and do it with tractable automation?\" [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1511799189119945TiWbn:matrix.org matrix]"
      },
      "id": "f4e9e8849afae592",
      "date": 1512826602841
    },
    {
      "type": "edit",
      "id": "f4e9e8849afae592",
      "item": {
        "type": "paragraph",
        "id": "f4e9e8849afae592",
        "text": "Can we write a \"clean, fast install\" that would bring up a new server from an existing one? Maybe it uses a Transporter: Create an account on Digital Ocean and drag that page to the install transporter. Repeat the same process for an upgrade. There are tons of cross-site issues here for sure. But what is the most wiki thing we could do assuming one had a whole wiki site to explain it and do it with tractable automation?\" [https://matrix.to/#/!ORfrUEFeWFcHAMLFLr:matrix.org/$1511799189119945TiWbn:matrix.org matrix]"
      },
      "date": 1512826626151
    },
    {
      "item": {
        "type": "factory",
        "id": "aa1f80dc288d83a9"
      },
      "id": "aa1f80dc288d83a9",
      "type": "add",
      "after": "f4e9e8849afae592",
      "date": 1512826652496
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker compositon\ngit clone https://github.com/dobbs/wiki-example-tls-friends local-farm\n\n# 3. launch the local farm\ncd local-farm\ndocker-compose up -d\n\n# 4. point your browser at https://localtest.me"
      },
      "date": 1512826846144
    },
    {
      "item": {
        "type": "factory",
        "id": "f106fbd1c949a306"
      },
      "id": "f106fbd1c949a306",
      "type": "add",
      "after": "aa1f80dc288d83a9",
      "date": 1512826852274
    },
    {
      "type": "edit",
      "id": "f106fbd1c949a306",
      "item": {
        "type": "markdown",
        "id": "f106fbd1c949a306",
        "text": "# Local Farm"
      },
      "date": 1512826864455
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "f106fbd1c949a306",
        "aa1f80dc288d83a9"
      ],
      "id": "f106fbd1c949a306",
      "date": 1512826867334
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker compositon\ngit clone https://github.com/dobbs/wiki-example-tls-friends local-farm\n\n# 3. launch the local farm\ncd local-farm\ncp .env.example .env\ndocker-compose up -d\n\n# 4. point your browser at https://localtest.me"
      },
      "date": 1512826948888
    },
    {
      "item": {
        "type": "factory",
        "id": "040ae510d269744c"
      },
      "id": "040ae510d269744c",
      "type": "add",
      "after": "aa1f80dc288d83a9",
      "date": 1512827062637
    },
    {
      "type": "edit",
      "id": "040ae510d269744c",
      "item": {
        "type": "reference",
        "id": "040ae510d269744c",
        "site": "local-farm.wiki.dbbs.co",
        "slug": "start-your-own-local-wiki-farm",
        "title": "start your own local wiki farm",
        "text": "We assume you are connected to the Net and already have some developer tools installed: git, docker, and docker-compose."
      },
      "date": 1512827079710
    },
    {
      "item": {
        "type": "factory",
        "id": "2b545b95de3f1657"
      },
      "id": "2b545b95de3f1657",
      "type": "add",
      "after": "040ae510d269744c",
      "date": 1512827090574
    },
    {
      "type": "edit",
      "id": "2b545b95de3f1657",
      "item": {
        "type": "paragraph",
        "id": "2b545b95de3f1657",
        "text": "What I have here is too many steps"
      },
      "date": 1512827101610
    },
    {
      "type": "edit",
      "id": "2b545b95de3f1657",
      "item": {
        "type": "paragraph",
        "id": "2b545b95de3f1657",
        "text": "What I have here is too many steps:"
      },
      "date": 1512827105934
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "f106fbd1c949a306",
        "2b545b95de3f1657",
        "aa1f80dc288d83a9",
        "040ae510d269744c"
      ],
      "id": "2b545b95de3f1657",
      "date": 1512827108922
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "f106fbd1c949a306",
        "2b545b95de3f1657",
        "040ae510d269744c",
        "aa1f80dc288d83a9"
      ],
      "id": "040ae510d269744c",
      "date": 1512827111631
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker compositon\ngit clone https://github.com/fedwiki/local-farm\n\n# 3. launch the local farm\ncd local-farm\n./start\n\n# 4. point your browser at https://localtest.me"
      },
      "date": 1512827301044
    },
    {
      "item": {
        "type": "factory",
        "id": "ebef5f0bef0a06ac"
      },
      "id": "ebef5f0bef0a06ac",
      "type": "add",
      "after": "aa1f80dc288d83a9",
      "date": 1512827303797
    },
    {
      "type": "edit",
      "id": "ebef5f0bef0a06ac",
      "item": {
        "type": "paragraph",
        "id": "ebef5f0bef0a06ac",
        "text": "I think this is more like what I want"
      },
      "date": 1512827314380
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "f106fbd1c949a306",
        "2b545b95de3f1657",
        "040ae510d269744c",
        "ebef5f0bef0a06ac",
        "aa1f80dc288d83a9"
      ],
      "id": "ebef5f0bef0a06ac",
      "date": 1512827317488
    },
    {
      "type": "edit",
      "id": "ebef5f0bef0a06ac",
      "item": {
        "type": "paragraph",
        "id": "ebef5f0bef0a06ac",
        "text": "I think this is more like what I want:"
      },
      "date": 1512827323853
    },
    {
      "item": {
        "type": "factory",
        "id": "54a35a2ff83645e4"
      },
      "id": "54a35a2ff83645e4",
      "type": "add",
      "after": "aa1f80dc288d83a9",
      "date": 1512827341141
    },
    {
      "item": {
        "type": "factory",
        "id": "40c8d8d63dcb80b3"
      },
      "id": "40c8d8d63dcb80b3",
      "type": "add",
      "after": "54a35a2ff83645e4",
      "date": 1512827346498
    },
    {
      "type": "remove",
      "id": "54a35a2ff83645e4",
      "date": 1512827348685
    },
    {
      "type": "edit",
      "id": "40c8d8d63dcb80b3",
      "item": {
        "type": "markdown",
        "id": "40c8d8d63dcb80b3",
        "text": "The `start` script in step 3 might do something like this:\n"
      },
      "date": 1512827397855
    },
    {
      "type": "add",
      "id": "9c34b0caa4325839",
      "item": {
        "type": "markdown",
        "id": "9c34b0caa4325839",
        "text": "```\ndocker-compose up -d\ndocker-compose logs farm | awk '/admin:/ {print $2}'\n```"
      },
      "after": "40c8d8d63dcb80b3",
      "date": 1512827477638
    },
    {
      "item": {
        "type": "factory",
        "id": "cd26a4f905a0bdee"
      },
      "id": "cd26a4f905a0bdee",
      "type": "add",
      "after": "9c34b0caa4325839",
      "date": 1512827682112
    },
    {
      "type": "remove",
      "id": "9c34b0caa4325839",
      "date": 1512827683598
    },
    {
      "type": "edit",
      "id": "cd26a4f905a0bdee",
      "item": {
        "type": "code",
        "id": "cd26a4f905a0bdee",
        "text": "docker-compose up -d\ncat <<EOF\nopen https://localtest.me\nuse the following password to unlock the wiki\nEOF\ndocker-compose logs farm \\\n  | awk -F\\' '/admin:/ {print $2; exit;}'\n"
      },
      "date": 1512827847409
    },
    {
      "item": {
        "type": "factory",
        "id": "3d51fabd2979ab83"
      },
      "id": "3d51fabd2979ab83",
      "type": "add",
      "after": "cd26a4f905a0bdee",
      "date": 1512827879840
    },
    {
      "type": "edit",
      "id": "3d51fabd2979ab83",
      "item": {
        "type": "paragraph",
        "id": "3d51fabd2979ab83",
        "text": "Sadly the first thing you would see is the browser security warning for the self-signed cert.  What I get in exchange for this pain is reusing the same docker images locally as I will use publicly."
      },
      "date": 1512828050583
    },
    {
      "type": "edit",
      "id": "3d51fabd2979ab83",
      "item": {
        "type": "paragraph",
        "id": "3d51fabd2979ab83",
        "text": "Sadly the first thing you would see is the browser security warning for the self-signed cert.  I think there are advantages to having a reverse proxy included in the default install.  Browsers are clearly getting more aggressive about requiring https.  Hoping we can learn remedies for the pains of security.  We can use locally the same tools used publicly.  That consistency will ease moving content from local to public wiki."
      },
      "date": 1512828682672
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker composition\ncurl -sSL https://github.com/fedwiki/local-farm/\ngit clone https://github.com/fedwiki/local-farm\n\n# 3. launch the local farm\ncd local-farm\n./start\n\n# 4. point your browser at https://localtest.me"
      },
      "date": 1512828735669
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker composition\ncurl -sSL https://raw.githubusercontent.com/fedwiki/local-farm/master/install.sh \\\n  | bash\n\n# 3. point your browser at https://localtest.me"
      },
      "date": 1512828866901
    },
    {
      "type": "edit",
      "id": "aa1f80dc288d83a9",
      "item": {
        "type": "code",
        "id": "aa1f80dc288d83a9",
        "text": "# 1. install docker\n\n# 2. download the local-farm docker composition\ncurl https://raw.githubusercontent.com/fedwiki/local-farm/master/install.sh \\\n  | bash\n\n# 3. point your browser at https://localtest.me"
      },
      "date": 1512828886498
    },
    {
      "type": "edit",
      "id": "40c8d8d63dcb80b3",
      "item": {
        "type": "markdown",
        "id": "40c8d8d63dcb80b3",
        "text": "The `install.sh` script in step 2 might do something like this:\n"
      },
      "date": 1512828922098
    },
    {
      "type": "remove",
      "id": "2b545b95de3f1657",
      "date": 1512831745410
    },
    {
      "type": "remove",
      "id": "040ae510d269744c",
      "date": 1512831755461
    },
    {
      "type": "remove",
      "id": "aa1f80dc288d83a9",
      "date": 1512831774965
    },
    {
      "type": "remove",
      "id": "ebef5f0bef0a06ac",
      "date": 1512831779034
    },
    {
      "type": "remove",
      "id": "40c8d8d63dcb80b3",
      "date": 1512831792082
    },
    {
      "type": "remove",
      "id": "cd26a4f905a0bdee",
      "date": 1512831807434
    },
    {
      "type": "remove",
      "id": "3d51fabd2979ab83",
      "date": 1512831811043
    },
    {
      "type": "remove",
      "id": "f106fbd1c949a306",
      "date": 1512831818623
    },
    {
      "item": {
        "type": "factory",
        "id": "efc6259ffedcc873"
      },
      "id": "efc6259ffedcc873",
      "type": "add",
      "after": "f4e9e8849afae592",
      "date": 1512874131833
    },
    {
      "type": "edit",
      "id": "efc6259ffedcc873",
      "item": {
        "type": "paragraph",
        "id": "efc6259ffedcc873",
        "text": "What does the federation already know about Docker? [http://home.c2.com:3030/#/find=words&within=pages&match=and&query=docker search]"
      },
      "date": 1512874170866
    },
    {
      "item": {
        "type": "factory",
        "id": "8d4ed8d68dac04e0"
      },
      "id": "8d4ed8d68dac04e0",
      "type": "add",
      "after": "efc6259ffedcc873",
      "date": 1512877997296
    },
    {
      "type": "edit",
      "id": "8d4ed8d68dac04e0",
      "item": {
        "type": "paragraph",
        "id": "8d4ed8d68dac04e0",
        "text": "Surveying those search results it looks like there's a lot of general knowledge without much applied knowledge or practice."
      },
      "date": 1512878134694
    },
    {
      "type": "add",
      "id": "d478017148416dc8",
      "item": {
        "type": "paragraph",
        "id": "d478017148416dc8",
        "text": "After a lot of practice I think docker-the-community is still not good at explaining the magic.  Very much like listening to functional programmers explain monads, or LISPers explain macros."
      },
      "after": "8d4ed8d68dac04e0",
      "date": 1512878318590
    },
    {
      "type": "edit",
      "id": "d478017148416dc8",
      "item": {
        "type": "paragraph",
        "id": "d478017148416dc8",
        "text": "Listening to the docker community explain containers is like listening to functional programmers explain monads, or LISPers explain macros.  Few can convey their magic.  Once a person has groked the magic, somehow they simultaneously loose the ability to illuminate a path to understanding."
      },
      "date": 1512878465322
    },
    {
      "type": "add",
      "id": "b8892820c41deb9e",
      "item": {
        "type": "paragraph",
        "id": "b8892820c41deb9e",
        "text": "*nix processes depend on an ecosystem: the kernel mediates access to RAM, CPU, devices, file system, and sockets.  The challenges of systems administration are nurturing and grooming the ecosystem that supports processes.  Processes finding themselves in inhospitable environments die."
      },
      "after": "d478017148416dc8",
      "date": 1512878842816
    },
    {
      "type": "add",
      "id": "d8a87390d288ba78",
      "item": {
        "type": "paragraph",
        "id": "d8a87390d288ba78",
        "text": "Docker images provide a freeze-dried ecosystem custom tailored to the processes they will host.  When a container launches from an image, the freeze-dried ecosystem is thawed, and the process takes up residence for as long as necessary to perform its tasks."
      },
      "after": "b8892820c41deb9e",
      "date": 1512879055682
    },
    {
      "type": "add",
      "id": "216ead86f42352a1",
      "item": {
        "type": "paragraph",
        "id": "216ead86f42352a1",
        "text": "The magic is almost entirely down to simple consistency.  The consistent ecosystem is perfectly suited to the consistent processes.  If anything goes awry over time, we just stop the failing container and restart anew from a pristine state with a new ecosystem and new process."
      },
      "after": "d8a87390d288ba78",
      "date": 1512879260590
    },
    {
      "type": "edit",
      "id": "d478017148416dc8",
      "item": {
        "type": "paragraph",
        "id": "d478017148416dc8",
        "text": "Listening to the docker community explain containers is like listening to functional programmers explain monads, or LISPers explain macros.  Few can convey their magic.  Once a person has groked the magic, somehow they simultaneously loose the ability to illuminate a path to understanding for anyone who hasn't already groked the magic."
      },
      "date": 1512879323168
    },
    {
      "type": "add",
      "id": "de48972f6475f6da",
      "item": {
        "type": "paragraph",
        "id": "de48972f6475f6da",
        "text": "[[Why containers work]]"
      },
      "after": "216ead86f42352a1",
      "date": 1512879367013
    },
    {
      "type": "edit",
      "id": "de48972f6475f6da",
      "item": {
        "type": "paragraph",
        "id": "de48972f6475f6da",
        "text": "[[Why Containers Work]]"
      },
      "date": 1512879377920
    },
    {
      "type": "remove",
      "id": "d478017148416dc8",
      "date": 1512879413834
    },
    {
      "type": "remove",
      "id": "b8892820c41deb9e",
      "date": 1512879416179
    },
    {
      "type": "remove",
      "id": "d8a87390d288ba78",
      "date": 1512879420532
    },
    {
      "type": "remove",
      "id": "216ead86f42352a1",
      "date": 1512879425048
    },
    {
      "type": "edit",
      "id": "de48972f6475f6da",
      "item": {
        "type": "paragraph",
        "id": "de48972f6475f6da",
        "text": "Consistency and Separation of (administrative) Concerns are [[Why Containers Work]]"
      },
      "date": 1512881488558
    },
    {
      "type": "edit",
      "id": "de48972f6475f6da",
      "item": {
        "type": "paragraph",
        "id": "de48972f6475f6da",
        "text": "Consistency and Separation of (administrative) Concerns are [[Why Containers Work]]."
      },
      "date": 1512881497371
    },
    {
      "type": "add",
      "id": "44ff2e53ad526e8f",
      "item": {
        "type": "paragraph",
        "id": "44ff2e53ad526e8f",
        "text": "Our hope for the federation is to apply containers to empower federation members to more easily share working systems, example configurations, and innovative improvements."
      },
      "after": "de48972f6475f6da",
      "date": 1512881596219
    },
    {
      "type": "add",
      "id": "a25540c18efa1d8a",
      "item": {
        "type": "paragraph",
        "id": "a25540c18efa1d8a",
        "text": "[[What does FedWiki know about Docker?]]"
      },
      "after": "44ff2e53ad526e8f",
      "date": 1512881840157
    },
    {
      "type": "remove",
      "id": "efc6259ffedcc873",
      "date": 1512881854965
    },
    {
      "type": "remove",
      "id": "8d4ed8d68dac04e0",
      "date": 1512881859455
    },
    {
      "type": "remove",
      "id": "de48972f6475f6da",
      "date": 1512881863063
    },
    {
      "type": "remove",
      "id": "44ff2e53ad526e8f",
      "date": 1512881866430
    },
    {
      "item": {
        "type": "factory",
        "id": "5ec2b7ad02e0e8a0"
      },
      "id": "5ec2b7ad02e0e8a0",
      "type": "add",
      "after": "a25540c18efa1d8a",
      "date": 1512882216082
    },
    {
      "type": "edit",
      "id": "5ec2b7ad02e0e8a0",
      "item": {
        "type": "paragraph",
        "id": "5ec2b7ad02e0e8a0",
        "text": "I gradually refactor the configurations in my public wiki and in the local-farm code.  I nudge them in the direction of almost identical configs with the aim of maximizing what is shared between them and minimizing them to only their essential differences."
      },
      "date": 1512882352631
    },
    {
      "item": {
        "type": "factory",
        "id": "072e6f66c6d0b858"
      },
      "id": "072e6f66c6d0b858",
      "type": "add",
      "after": "78fd7bfa7aac77ae",
      "date": 1512882370810
    },
    {
      "type": "edit",
      "id": "072e6f66c6d0b858",
      "item": {
        "type": "markdown",
        "id": "072e6f66c6d0b858",
        "text": "I expect those differences to be mainly:\n"
      },
      "date": 1512882377494
    },
    {
      "type": "edit",
      "id": "072e6f66c6d0b858",
      "item": {
        "type": "markdown",
        "id": "072e6f66c6d0b858",
        "text": "I expect those differences to be mainly:\n* domain names\n* real TLS certs vs self-signed TLS certs\n* content of pages"
      },
      "date": 1512882441632
    },
    {
      "type": "edit",
      "id": "072e6f66c6d0b858",
      "item": {
        "type": "markdown",
        "id": "072e6f66c6d0b858",
        "text": "I expect those differences to be mainly:\n* domain names\n* real TLS certs vs self-signed TLS certs\n* content of pages\n"
      },
      "date": 1512883843313
    },
    {
      "type": "add",
      "id": "9a0e34d275a0c787",
      "item": {
        "type": "markdown",
        "id": "9a0e34d275a0c787",
        "text": "# HOWTO"
      },
      "after": "072e6f66c6d0b858",
      "date": 1512883851570
    },
    {
      "item": {
        "type": "factory",
        "id": "78c3a7f934a0d124"
      },
      "id": "78c3a7f934a0d124",
      "type": "add",
      "after": "9a0e34d275a0c787",
      "date": 1512883854719
    },
    {
      "type": "edit",
      "id": "78c3a7f934a0d124",
      "item": {
        "type": "paragraph",
        "id": "78c3a7f934a0d124",
        "text": "I think you can use my [[digitalocean-bootstrap.sh]] script to create your own docker host in Digital Ocean."
      },
      "date": 1512883902368
    },
    {
      "type": "add",
      "id": "6daeffb2828f6cef",
      "item": {
        "type": "paragraph",
        "id": "6daeffb2828f6cef",
        "text": "1. generate an API token from Digital Ocean's control panel"
      },
      "after": "78c3a7f934a0d124",
      "date": 1512883962542
    },
    {
      "item": {
        "type": "factory",
        "id": "7a81877d8c1869f1"
      },
      "id": "7a81877d8c1869f1",
      "type": "add",
      "after": "6daeffb2828f6cef",
      "date": 1512883974725
    },
    {
      "type": "remove",
      "id": "6daeffb2828f6cef",
      "date": 1512883976467
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`."
      },
      "date": 1512884055990
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. run `./digitalocean-bootstrap.sh"
      },
      "date": 1512884074842
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. run `./digitalocean-bootstrap.sh`"
      },
      "date": 1512884087983
    },
    {
      "type": "edit",
      "id": "9a0e34d275a0c787",
      "item": {
        "type": "markdown",
        "id": "9a0e34d275a0c787",
        "text": "# Bootstrap your own docker host"
      },
      "date": 1512884140804
    },
    {
      "type": "edit",
      "id": "9a0e34d275a0c787",
      "item": {
        "type": "markdown",
        "id": "9a0e34d275a0c787",
        "text": "# Create a Docker Host in Digital Ocean"
      },
      "date": 1512884165278
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. run `./digitalocean-bootstrap.sh`\n"
      },
      "date": 1512884180463
    },
    {
      "type": "add",
      "id": "52e8bb33606fb173",
      "item": {
        "type": "markdown",
        "id": "52e8bb33606fb173",
        "text": "TODO (for the author): simplify the docker-compose thing so this works:\n1. setup `LE_EMAIL`\n2. setup domain names in Digital Ocean\n2. clone repo\n3. start with Let's Encrypt's sandbox first\n4. `docker-compose up -d`\n5. change to real certs from Let's Encrypt\n6. `docker-compose restart proxy`"
      },
      "after": "7a81877d8c1869f1",
      "date": 1512884432267
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. tell your domain registrar to use Digital Ocean's DNS servers.\n4. run `./digitalocean-bootstrap.sh`\n"
      },
      "date": 1512884478345
    },
    {
      "type": "edit",
      "id": "7a81877d8c1869f1",
      "item": {
        "type": "markdown",
        "id": "7a81877d8c1869f1",
        "text": "1. generate an API token from Digital Ocean's control panel\n2. edit the `.env` file (you're domain goes in `DROPLET`, choose your own `REGION`, you can wait on the `LE_EMAIL`.\n3. tell your domain registrar to use Digital Ocean's DNS servers.\n4. run `./digitalocean-bootstrap.sh`\n\n"
      },
      "date": 1512884521084
    },
    {
      "type": "add",
      "id": "3ba6738fb744b96d",
      "item": {
        "type": "markdown",
        "id": "3ba6738fb744b96d",
        "text": "# Start your Wiki (probably not working yet)"
      },
      "after": "7a81877d8c1869f1",
      "date": 1512884544242
    },
    {
      "item": {
        "type": "factory",
        "id": "ea5ca8270e9138f8"
      },
      "id": "ea5ca8270e9138f8",
      "type": "add",
      "after": "52e8bb33606fb173",
      "date": 1512884587565
    },
    {
      "type": "edit",
      "id": "ea5ca8270e9138f8",
      "item": {
        "type": "pagefold",
        "id": "ea5ca8270e9138f8",
        "text": "not clean nor fast yet"
      },
      "date": 1512884597373
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "a25540c18efa1d8a",
        "ea5ca8270e9138f8",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173"
      ],
      "id": "ea5ca8270e9138f8",
      "date": 1512884607139
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173"
      ],
      "id": "ea5ca8270e9138f8",
      "date": 1512884613258
    },
    {
      "item": {
        "type": "factory",
        "id": "002cbd0ae047c856"
      },
      "id": "002cbd0ae047c856",
      "type": "add",
      "after": "52e8bb33606fb173",
      "date": 1513045438268
    },
    {
      "type": "edit",
      "id": "002cbd0ae047c856",
      "item": {
        "type": "pagefold",
        "id": "002cbd0ae047c856",
        "text": "."
      },
      "date": 1513045442979
    },
    {
      "item": {
        "type": "factory",
        "id": "b161bc1826cb3e89"
      },
      "id": "b161bc1826cb3e89",
      "type": "add",
      "after": "002cbd0ae047c856",
      "date": 1513045444591
    },
    {
      "type": "edit",
      "id": "b161bc1826cb3e89",
      "item": {
        "type": "paragraph",
        "id": "b161bc1826cb3e89",
        "text": "Updating my running wiki was clean and fast.  Today Paul announced an update to wiki and a security update for nodejs.  I took a couple small steps to update my public wiki."
      },
      "date": 1513045520447
    },
    {
      "item": {
        "type": "factory",
        "id": "f062cd1841f77898"
      },
      "id": "f062cd1841f77898",
      "type": "add",
      "after": "178a0511bf663949",
      "date": 1513045531723
    },
    {
      "type": "edit",
      "id": "f062cd1841f77898",
      "item": {
        "type": "markdown",
        "id": "f062cd1841f77898",
        "text": "First, I updated the `dobbs/farm` container.  [https://github github]"
      },
      "date": 1513045570053
    },
    {
      "type": "edit",
      "id": "f062cd1841f77898",
      "item": {
        "type": "markdown",
        "id": "f062cd1841f77898",
        "text": "First, I updated the `dobbs/farm` container.  I jumped up to `nodejs 8` and `wiki 0.13.0`.  I committed, tagged and pushed that change to github. [https://github.com/dobbs/farm/commit/e37d746c69ee00410363204d0fcffa03ae93d244 github]\n"
      },
      "date": 1513045697068
    },
    {
      "type": "add",
      "id": "fd7fa912aae36414",
      "item": {
        "type": "markdown",
        "id": "fd7fa912aae36414",
        "text": "Because I have them connected to each other, dockerhub noticed the new code and built new containers for them.  [http://dockerhub dockerhub]"
      },
      "after": "f062cd1841f77898",
      "date": 1513045748039
    },
    {
      "type": "edit",
      "id": "fd7fa912aae36414",
      "item": {
        "type": "markdown",
        "id": "fd7fa912aae36414",
        "text": "Because I have them connected to each other, dockerhub noticed the new code and built new containers for them.  [https://hub.docker.com/r/dobbs/farm/builds/bedhktshtngoqqyscmm7ytb/ dockerhub]"
      },
      "date": 1513045816014
    },
    {
      "type": "edit",
      "id": "fd7fa912aae36414",
      "item": {
        "type": "markdown",
        "id": "fd7fa912aae36414",
        "text": "Because I have them connected to each other, dockerhub noticed the new code and built new containers for them.  [https://hub.docker.com/r/dobbs/farm/builds/bedhktshtngoqqyscmm7ytb/ dockerhub]\n"
      },
      "date": 1513045823603
    },
    {
      "type": "add",
      "id": "3de89495b5cfc542",
      "item": {
        "type": "markdown",
        "id": "3de89495b5cfc542",
        "text": "Second, I updated the version noted in `docker-compose.yml` for my public site, and then ...\n"
      },
      "after": "fd7fa912aae36414",
      "date": 1513045893204
    },
    {
      "item": {
        "type": "factory",
        "id": "311fea0084101b56"
      },
      "id": "311fea0084101b56",
      "type": "add",
      "after": "3de89495b5cfc542",
      "date": 1513045901842
    },
    {
      "type": "edit",
      "id": "311fea0084101b56",
      "item": {
        "type": "code",
        "id": "311fea0084101b56",
        "text": "# set shell env to control my public docker host\neval $(docker-machine env wiki.dbbs.co)\n\n# recreated the farm container\ndocker-compose up -d farm"
      },
      "date": 1513046030914
    },
    {
      "type": "edit",
      "id": "b161bc1826cb3e89",
      "item": {
        "type": "markdown",
        "id": "b161bc1826cb3e89",
        "text": "Updating my running wiki was clean and fast.  Today Paul announced an update to wiki and a security update for nodejs.  I took a couple small steps to update my public wiki.\n"
      },
      "date": 1525636177580
    },
    {
      "type": "add",
      "id": "34da6f218fe24660",
      "item": {
        "type": "markdown",
        "id": "34da6f218fe24660",
        "text": "Contrast [[Clean Fast Install Locally]]"
      },
      "after": "b161bc1826cb3e89",
      "date": 1525636190492
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "f062cd1841f77898",
        "fd7fa912aae36414",
        "3de89495b5cfc542",
        "311fea0084101b56",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173",
        "002cbd0ae047c856",
        "b161bc1826cb3e89",
        "34da6f218fe24660"
      ],
      "id": "f4e9e8849afae592",
      "date": 1531149751857
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "fd7fa912aae36414",
        "3de89495b5cfc542",
        "311fea0084101b56",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173",
        "002cbd0ae047c856",
        "b161bc1826cb3e89",
        "f062cd1841f77898",
        "34da6f218fe24660"
      ],
      "id": "f062cd1841f77898",
      "date": 1531149810381
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "3de89495b5cfc542",
        "311fea0084101b56",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173",
        "002cbd0ae047c856",
        "b161bc1826cb3e89",
        "f062cd1841f77898",
        "fd7fa912aae36414",
        "34da6f218fe24660"
      ],
      "id": "fd7fa912aae36414",
      "date": 1531149821515
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "311fea0084101b56",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173",
        "002cbd0ae047c856",
        "b161bc1826cb3e89",
        "f062cd1841f77898",
        "fd7fa912aae36414",
        "3de89495b5cfc542",
        "34da6f218fe24660"
      ],
      "id": "3de89495b5cfc542",
      "date": 1531149834452
    },
    {
      "type": "move",
      "order": [
        "f4e9e8849afae592",
        "a25540c18efa1d8a",
        "5ec2b7ad02e0e8a0",
        "072e6f66c6d0b858",
        "ea5ca8270e9138f8",
        "9a0e34d275a0c787",
        "78c3a7f934a0d124",
        "7a81877d8c1869f1",
        "3ba6738fb744b96d",
        "52e8bb33606fb173",
        "002cbd0ae047c856",
        "b161bc1826cb3e89",
        "f062cd1841f77898",
        "fd7fa912aae36414",
        "3de89495b5cfc542",
        "311fea0084101b56",
        "34da6f218fe24660"
      ],
      "id": "311fea0084101b56",
      "date": 1531149847147
    }
  ]
}